from matplotlib import pyplot as plt
import numpy as np


#
# D1 = [73.442, 53.247, 52.208, 47.754, 47.700, 46.367, 46.214, 46.857, 46.039, 47.468, 40.260, 39.273, 36.351, 35.260, 36.385, 36.052, 36.364]  # -12dB
# d1 = [67.364, 38.506, 38.636, 36.364, 36.429, 35.455, 36.364, 36.027, 36.364, 32.468, 31.623, 27.273, 26.896, 27.273, 27.519, 28.052, 27.273]
# D2 = [56.039, 69.545, 54.545, 51.169, 48.117, 48.273, 52.468, 47.273, 48.766, 46.364, 42.922, 46.364, 37.273, 37.273, 39.545, 37.900, 38.961]  # -10dB
# d2 = [37.208, 67.714, 45.584, 38.117, 41.169, 42.273, 39.026, 37.338, 37.208, 36.364, 32.922, 28.364, 27.273, 27.273, 24.545, 27.273, 28.052]
# D3 = [52.013, 56.883, 78.506, 61.229, 54.870, 52.948, 49.429, 48.169, 46.364, 48.371, 48.182, 46.364, 41.818, 46.039, 40.844, 37.273, 36.169]  # -8dB
# d3 = [32.013, 36.883, 76.432, 51.299, 44.872, 46.961, 46.529, 40.130, 36.496, 38.710, 38.251, 36.364, 34.818, 32.900, 34.567, 27.273, 31.753]
# D4 = [39.805, 40.844, 54.610, 77.468, 61.844, 58.506, 55.909, 50.649, 53.247, 51.104, 49.091, 49.805, 44.545, 42.597, 39.805, 42.729, 42.013]  # -6dB
# d4 = [31.753, 32.727, 44.953, 75.068, 56.117, 55.119, 48.952, 43.468, 42.644, 35.905, 39.654, 39.722, 38.617, 38.644, 37.273, 35.974, 32.532]
# D5 = [37.662, 39.091, 48.117, 51.494, 76.818, 56.753, 60.325, 53.071, 49.870, 45.455, 45.649, 46.169, 46.299, 47.273, 42.143, 37.857, 35.844]  # -4dB
# d5 = [28.732, 31.518, 39.442, 46.481, 74.214, 48.701, 48.701, 49.870, 43.896, 39.286, 36.753, 36.229, 37.273, 39.213, 37.857, 32.857, 31.894]
# D6 = [40.130, 37.338, 48.766, 52.013, 60.000, 74.740, 68.312, 57.403, 53.896, 53.247, 55.909, 48.857, 49.610, 41.104, 41.429, 40.909, 38.182]  # -2dB
# d6 = [31.854, 32.688, 38.532, 49.351, 52.143, 73.694, 64.935, 51.336, 47.648, 47.468, 48.689, 42.273, 41.104, 35.000, 34.558, 32.909, 29.870]
# D7 = [28.896, 35.857, 39.740, 42.857, 55.714, 66.104, 81.299, 63.247, 59.091, 62.013, 48.312, 51.948, 39.156, 42.273, 43.422, 38.961, 36.364]  # 0dB
# d7 = [24.534, 30.210, 31.518, 37.338, 49.481, 54.610, 81.948, 60.779, 53.636, 54.403, 43.273, 41.733, 36.571, 34.182, 31.922, 32.117, 30.532]
# D8 = [28.377, 31.753, 37.273, 38.251, 46.364, 54.545, 62.208, 90.000, 70.909, 73.636, 68.636, 64.935, 53.052, 49.870, 48.766, 39.675, 40.364]  # 2dB
# d8 = [19.314, 23.468, 29.916, 32.601, 40.957, 46.685, 53.026, 86.791, 66.162, 63.822, 63.187, 57.276, 45.653, 42.448, 41.562, 34.489, 33.652]
# D9 = [27.388, 28.636, 35.130, 38.766, 61.558, 59.351, 56.753, 61.753, 87.597, 82.622, 78.247, 69.610, 55.390, 52.468, 49.610, 47.403, 52.723]  # 4dB
# d9 = [19.292, 21.308, 29.087, 32.248, 43.666, 51.242, 52.400, 56.074, 85.810, 77.387, 69.326, 64.054, 48.756, 46.885, 44.578, 41.146, 43.120]
# D10 = [27.273, 27.727, 32.727, 44.091, 58.247, 55.390, 57.338, 73.496, 81.948, 98.571, 89.675, 83.377, 69.740, 67.532, 59.286, 53.701, 49.286]  # 6dB
# d10 = [22.050, 22.045, 29.173, 37.144, 44.737, 51.032, 53.543, 66.281, 78.942, 96.773, 85.045, 75.608, 65.247, 62.296, 53.988, 50.698, 44.941]
# D11 = [29.286, 31.636, 32.403, 44.935, 48.442, 50.974, 56.234, 60.779, 67.662, 88.117, 92.468, 94.545, 90.195, 75.065, 55.325, 51.494, 43.961]  # 8dB
# d11 = [21.823, 24.815, 26.367, 39.741, 42.177, 43.720, 52.214, 53.104, 60.999, 81.150, 86.481, 91.038, 87.740, 71.579, 52.206, 46.376, 40.469]
# D12 = [27.273, 28.052, 37.208, 40.779, 46.039, 52.468, 54.545, 66.753, 68.247, 75.584, 94.545, 98.831, 92.468, 94.416, 85.260, 60.714, 57.857]  # 10dB
# d12 = [22.319, 22.336, 32.396, 32.414, 39.802, 48.393, 47.878, 59.714, 61.972, 70.365, 85.690, 96.536, 88.400, 82.914, 76.928, 51.739, 50.821]
# D13 = [28.571, 32.857, 32.468, 36.364, 40.260, 42.078, 53.636, 69.117, 68.961, 76.299, 88.052, 93.571, 99.935, 97.727, 86.494, 68.766, 60.779]  # 12dB
# d13 = [21.759, 22.883, 24.303, 31.973, 34.035, 34.606, 45.903, 62.032, 60.600, 70.871, 83.674, 85.074, 98.640, 90.634, 78.458, 64.209, 53.295]
# D14 = [27.597, 28.701, 32.468, 32.468, 46.039, 54.610, 52.948, 57.662, 52.338, 53.506, 69.545, 91.948, 95.390, 100.00, 90.584, 88.052, 73.496]  # 14dB
# d14 = [21.439, 23.239, 24.933, 26.958, 38.734, 47.927, 46.464, 46.290, 45.505, 48.835, 61.769, 83.779, 87.040, 97.954, 85.874, 81.079, 68.661]
# D15 = [27.273, 27.338, 37.662, 37.727, 40.325, 40.779, 45.519, 42.078, 42.662, 42.987, 57.338, 77.468, 87.792, 97.078, 99.740, 97.984, 88.831]  # 16dB
# d15 = [18.666, 19.661, 31.826, 30.835, 36.264, 34.362, 38.383, 37.107, 36.639, 36.581, 49.981, 72.704, 82.814, 89.100, 97.244, 91.364, 84.482]
# D16 = [27.273, 29.481, 41.299, 38.117, 33.247, 34.286, 41.948, 42.078, 42.273, 46.753, 47.143, 47.143, 83.506, 88.571, 87.727, 100.00, 92.922]  # 18dB
# d16 = [22.423, 23.521, 24.041, 26.721, 28.842, 28.534, 36.058, 36.740, 38.126, 38.184, 39.609, 39.609, 69.392, 82.024, 83.615, 100.00, 84.132]
# D17 = [27.273, 27.273, 32.468, 34.740, 33.506, 34.805, 36.364, 38.247, 40.779, 46.039, 52.948, 61.234, 73.312, 89.675, 88.182, 86.299, 100.00]  # 20dB
# d17 = [22.569, 22.345, 27.488, 27.542, 28.712, 29.601, 31.790, 33.548, 33.342, 40.150, 48.677, 54.684, 67.859, 72.834, 73.353, 79.072, 99.045]


# snr_FT = [34.000, 27.250, 43.389, 35.620, 37.250, 36.393, 90.125, 85.525, 94.440, 84.875, 73.500, 83.750]
# snr_TL = []
# snr_SO = []
#
# sps_FT = [68.250, 71.667, 73.500, 48.250, 73.500, 38.000, 23.000, 49.500, 59.000, 41.500, 31.623, 36.393, 50.650,
#           56.625, 55.250, 50.870, 51.500, 46.000, 27.625, 44.500, 44.250, 37.250, 31.375, 26.000]
#
# tunnel_FT = [33.750, 39.750, 40.500, 89.250, 90.750, 89.542, 46.250, 50.000, 45.500, 74.031, 73.500, 73.250]
#
# snr_tunnel_FT = [25.550, 23.000, 15.570, 35.500, 32.450, 38.500, 84.250, 83.500, 90.812, 38.250, 45.653, 36.750]
#
# snr_sps_FT = [25.550, 23.000, 35.500, 33.750, 32.450, 25.550, 23.000, 25.550, 34.000, 27.250, 35.620, 37.250, 73.500,
#               81.250, 78.500, 67.350, 66.750, 72.630, 74.031, 81.250, 82.371, 70.560, 64.550, 67.580]
#
# sps_tunnel_FT = [33.750, 39.750, 40.500, 35.500, 32.450, 38.500, 46.250, 50.000, 45.500, 38.000, 23.000, 49.500, ]
# # 绘制折线图
# # Xlabel = ['-12dB', '-8dB', '-4dB', '0dB', '4dB', '8dB', '12dB', '16dB', '20dB']
# # Xlabel = ['-12dB', '-10dB', '-8dB', '-6dB', '-4dB', '-2dB', '0dB', '2dB', '4dB', '6dB', '8dB', '10dB', '12dB', '14dB', '16dB', '18dB', '20dB']
Xlabel = ['D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7', 'D8', 'D9', 'D10', 'D11', 'D12', 'D13', 'D14', 'D15', 'D16', 'D17']
# #
# plt.plot(Xlabel, D1, 'r*--', alpha=0.5, linewidth=1, label='Fine Tune')  # 'bo-'表示蓝色实线，数据点实心原点标注
# plt.plot(Xlabel, d1, 'b*--', alpha=0.5, linewidth=1, label='Tradition')  # 'bo-'表示蓝色实线，数据点实心原点标注
#
# # plt.plot(Xlabel, IQ, 'b*--', alpha=0.5, linewidth=1, label='IQ')  # 'bo-'表示蓝色实线，数据点实心原点标注
# # plt.plot(Xlabel, AP, 'r*--', alpha=0.5, linewidth=1, label='AP')  # 'bo-'表示蓝色实线，数据点实心原点标注
# # plt.plot(Xlabel, SPC, 'g*--', alpha=0.5, linewidth=1, label='SPC')  # 'bo-'表示蓝色实线，数据点实心原点标注
# # plt.plot(Xlabel, IQandAP, 'bo--', alpha=0.5, linewidth=1, label='IQandAP')  # 'bo-'表示蓝色实线，数据点实心原点标注
# # plt.plot(Xlabel, IQandSPC, 'ro--', alpha=0.5, linewidth=1, label='IQandSPC')  # 'bo-'表示蓝色实线，数据点实心原点标注
# # plt.plot(Xlabel, APandSPC, 'go--', alpha=0.5, linewidth=1, label='APandSPC')  # 'bo-'表示蓝色实线，数据点实心原点标注
# # plt.plot(Xlabel, IQandAPandSPC, 'yo--', alpha=0.5, linewidth=1, label='IQandAPandSPC')  # 'bo-'表示蓝色实线，数据点实心原点标注
# #
# #
# # ## plot中参数的含义分别是横轴值，纵轴值，线的形状（'s'方块,'o'实心圆点，'*'五角星   ...，颜色，透明度,线的宽度和标签 ，
# #
# plt.title('Source Domain SNR -12dB')			# 图片标题
# plt.legend()  # 显示上面的label
# plt.xlabel('Target Domain')  # x_label
# plt.ylabel('Accuracy')  # y_label
# #
# # # plt.ylim(-1,1)#仅设置y轴坐标范围
# plt.show()


# 绘制柱状图
plt.rcParams['font.sans-serif'] = ['SimHei']
plt.rcParams['axes.unicode_minus'] = False

# Xlabel = ['IQ', 'AP', 'SPC', 'IQ+AP', 'IQ+SPC', 'AP+SPC', 'IQ+AP+SPC']
# Xlabel = ['D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7', 'D8', 'D9', 'D10', 'D11', 'D12']
Xlabel = ['信噪比不同', '信道模型不同', 'sps不同', '信噪比和信道模型不同', '信噪比和sps不同', 'sps和信道模型不同', '信噪比、sps和信道模型不同']
Xlabel = ['S1', 'S2', 'S3', 'S4', 'S5', 'S6', 'S7']

# Ylabel = [meanIQ, meanAP, meanSPC, meanIQandAP, meanIQandSPC, meanAPandSPC, meanIQandAPandSPC]
# Ylabel = [np.mean(D1), np.mean(D2), np.mean(D3), np.mean(D4), np.mean(D5), np.mean(D6), np.mean(D7), np.mean(D8), np.mean(D9), np.mean(D10), np.mean(D11), np.mean(D12), np.mean(D13), np.mean(D14), np.mean(D15), np.mean(D16), np.mean(D17)]
# Ylabel1 = [np.mean(d1), np.mean(d2), np.mean(d3), np.mean(d4), np.mean(d5), np.mean(d6), np.mean(d7), np.mean(d8), np.mean(d9), np.mean(d10), np.mean(d11), np.mean(d12), np.mean(d13), np.mean(d14), np.mean(d15), np.mean(d16), np.mean(d17)]
# Ylabel = [99.98, 87.51, 99.83, 89.60, 96.32, 87.09, 80.80, 65.4, 82.54, 68.87, 81.68, 70.78]


D1 = [73.442, 53.247, 52.208, 47.754, 47.700, 46.367, 46.214, 46.857, 46.039, 47.468, 40.260, 39.273, 36.351, 35.260, 36.385, 36.052, 36.364]  # -12dB
d1 = [67.364, 38.506, 38.636, 36.364, 36.429, 35.455, 36.364, 36.027, 36.364, 32.468, 31.623, 27.273, 26.896, 27.273, 27.519, 28.052, 27.273]
D2 = [56.039, 69.545, 54.545, 51.169, 48.117, 48.273, 52.468, 47.273, 48.766, 46.364, 42.922, 46.364, 37.273, 37.273, 39.545, 37.900, 38.961]  # -10dB
d2 = [37.208, 67.714, 45.584, 38.117, 41.169, 42.273, 39.026, 37.338, 37.208, 36.364, 32.922, 28.364, 27.273, 27.273, 24.545, 27.273, 28.052]
D3 = [52.013, 56.883, 78.506, 61.229, 54.870, 52.948, 49.429, 48.169, 46.364, 48.371, 48.182, 46.364, 41.818, 46.039, 40.844, 37.273, 36.169]  # -8dB
d3 = [32.013, 36.883, 76.432, 51.299, 44.872, 46.961, 46.529, 40.130, 36.496, 38.710, 38.251, 36.364, 34.818, 32.900, 34.567, 27.273, 31.753]
D4 = [39.805, 40.844, 54.610, 77.468, 61.844, 58.506, 55.909, 50.649, 53.247, 51.104, 49.091, 49.805, 44.545, 42.597, 39.805, 42.729, 42.013]  # -6dB
d4 = [31.753, 32.727, 44.953, 75.068, 56.117, 55.119, 48.952, 43.468, 42.644, 35.905, 39.654, 39.722, 38.617, 38.644, 37.273, 35.974, 32.532]
D5 = [37.662, 39.091, 48.117, 51.494, 76.818, 56.753, 60.325, 53.071, 49.870, 45.455, 45.649, 46.169, 46.299, 47.273, 42.143, 37.857, 35.844]  # -4dB
d5 = [28.732, 31.518, 39.442, 46.481, 74.214, 48.701, 48.701, 49.870, 43.896, 39.286, 36.753, 36.229, 37.273, 39.213, 37.857, 32.857, 31.894]
D6 = [40.130, 37.338, 48.766, 52.013, 60.000, 74.740, 68.312, 57.403, 53.896, 53.247, 55.909, 48.857, 49.610, 41.104, 41.429, 40.909, 38.182]  # -2dB
d6 = [31.854, 32.688, 38.532, 49.351, 52.143, 73.694, 64.935, 51.336, 47.648, 47.468, 48.689, 42.273, 41.104, 35.000, 34.558, 32.909, 29.870]
D7 = [28.896, 35.857, 39.740, 42.857, 55.714, 66.104, 81.299, 63.247, 59.091, 62.013, 48.312, 51.948, 39.156, 42.273, 43.422, 38.961, 36.364]  # 0dB
d7 = [24.534, 30.210, 31.518, 37.338, 49.481, 54.610, 81.948, 60.779, 53.636, 54.403, 43.273, 41.733, 36.571, 34.182, 31.922, 32.117, 30.532]
D8 = [28.377, 31.753, 37.273, 38.251, 46.364, 54.545, 62.208, 90.000, 70.909, 73.636, 68.636, 64.935, 53.052, 49.870, 48.766, 39.675, 40.364]  # 2dB
d8 = [19.314, 23.468, 29.916, 32.601, 40.957, 46.685, 53.026, 86.791, 66.162, 63.822, 63.187, 57.276, 45.653, 42.448, 41.562, 34.489, 33.652]
D9 = [27.388, 28.636, 35.130, 38.766, 61.558, 59.351, 56.753, 61.753, 87.597, 82.622, 78.247, 69.610, 55.390, 52.468, 49.610, 47.403, 52.723]  # 4dB
d9 = [19.292, 21.308, 29.087, 32.248, 43.666, 51.242, 52.400, 56.074, 85.810, 77.387, 69.326, 64.054, 48.756, 46.885, 44.578, 41.146, 43.120]
D10 = [27.273, 27.727, 32.727, 44.091, 58.247, 55.390, 57.338, 73.496, 81.948, 98.571, 89.675, 83.377, 69.740, 67.532, 59.286, 53.701, 49.286]  # 6dB
d10 = [22.050, 22.045, 29.173, 37.144, 44.737, 51.032, 53.543, 66.281, 78.942, 96.773, 85.045, 75.608, 65.247, 62.296, 53.988, 50.698, 44.941]
D11 = [29.286, 31.636, 32.403, 44.935, 48.442, 50.974, 56.234, 60.779, 67.662, 88.117, 92.468, 94.545, 90.195, 75.065, 55.325, 51.494, 43.961]  # 8dB
d11 = [21.823, 24.815, 26.367, 39.741, 42.177, 43.720, 52.214, 53.104, 60.999, 81.150, 86.481, 91.038, 87.740, 71.579, 52.206, 46.376, 40.469]
D12 = [27.273, 28.052, 37.208, 40.779, 46.039, 52.468, 54.545, 66.753, 68.247, 75.584, 94.545, 98.831, 92.468, 94.416, 85.260, 60.714, 57.857]  # 10dB
d12 = [22.319, 22.336, 32.396, 32.414, 39.802, 48.393, 47.878, 59.714, 61.972, 70.365, 85.690, 96.536, 88.400, 82.914, 76.928, 51.739, 50.821]
D13 = [28.571, 32.857, 32.468, 36.364, 40.260, 42.078, 53.636, 69.117, 68.961, 76.299, 88.052, 93.571, 99.935, 97.727, 86.494, 68.766, 60.779]  # 12dB
d13 = [21.759, 22.883, 24.303, 31.973, 34.035, 34.606, 45.903, 62.032, 60.600, 70.871, 83.674, 85.074, 98.640, 90.634, 78.458, 64.209, 53.295]
D14 = [27.597, 28.701, 32.468, 32.468, 46.039, 54.610, 52.948, 57.662, 52.338, 53.506, 69.545, 91.948, 95.390, 100.00, 90.584, 88.052, 73.496]  # 14dB
d14 = [21.439, 23.239, 24.933, 26.958, 38.734, 47.927, 46.464, 46.290, 45.505, 48.835, 61.769, 83.779, 87.040, 97.954, 85.874, 81.079, 68.661]
D15 = [27.273, 27.338, 37.662, 37.727, 40.325, 40.779, 45.519, 42.078, 42.662, 42.987, 57.338, 77.468, 87.792, 97.078, 99.740, 97.984, 88.831]  # 16dB
d15 = [18.666, 19.661, 31.826, 30.835, 36.264, 34.362, 38.383, 37.107, 36.639, 36.581, 49.981, 72.704, 82.814, 89.100, 97.244, 91.364, 84.482]
D16 = [27.273, 29.481, 41.299, 38.117, 33.247, 34.286, 41.948, 42.078, 42.273, 46.753, 47.143, 47.143, 83.506, 88.571, 87.727, 100.00, 92.922]  # 18dB
d16 = [22.423, 23.521, 24.041, 26.721, 28.842, 28.534, 36.058, 36.740, 38.126, 38.184, 39.609, 39.609, 69.392, 82.024, 83.615, 100.00, 84.132]
D17 = [27.273, 27.273, 32.468, 34.740, 33.506, 34.805, 36.364, 38.247, 40.779, 46.039, 52.948, 61.234, 73.312, 89.675, 88.182, 86.299, 100.00]  # 20dB
d17 = [22.569, 22.345, 27.488, 27.542, 28.712, 29.601, 31.790, 33.548, 33.342, 40.150, 48.677, 54.684, 67.859, 72.834, 73.353, 79.072, 99.045]

Ylabel1 = [np.mean(D1), np.mean(D2), np.mean(D3), np.mean(D4), np.mean(D5), np.mean(D6), np.mean(D7), np.mean(D8), np.mean(D9), np.mean(D10), np.mean(D11), np.mean(D12), np.mean(D13), np.mean(D14), np.mean(D15), np.mean(D16), np.mean(D17)]
Ylabel2 = [np.mean(d1), np.mean(d2), np.mean(d3), np.mean(d4), np.mean(d5), np.mean(d6), np.mean(d7), np.mean(d8), np.mean(d9), np.mean(d10), np.mean(d11), np.mean(d12), np.mean(d13), np.mean(d14), np.mean(d15), np.mean(d16), np.mean(d17)]

Ylabel1 = [75.94, 74.72, 58.32, 63.39, 48.32, 43.57, 38.10]
Ylabel2 = [60.51, 64.67, 46.08, 45.81, 32.45, 29.09, 22.64]
Ylabel3 = [54.97, 63.22, 39.61, 42.56, 27.74, 25.06, 19.51]

bar_width = 0.3  # 条形宽度
index_1 = np.arange(len(Xlabel))  # 男生条形图的横坐标
index_2 = index_1 + bar_width  # 女生条形图的横坐标
index_3 = index_2 + bar_width  # 女生条形图的横坐标

plt.xlabel('Datasets')  # x_label
plt.ylabel('Accuracy(%)')  # y_label
plt.bar(index_1, height=Ylabel1, width=bar_width, color='r', label='迁移学习')
plt.bar(index_2, height=Ylabel2, width=bar_width, color='g', label='Fine-Tune')
plt.bar(index_3, height=Ylabel3, width=bar_width, color='b', label='传统深度学习')

plt.legend()  # 显示图例
plt.xticks(index_1 + bar_width / 2, Xlabel)

plt.title('不同域适应任务的平均识别准确率')
for a, b in zip(index_1, Ylabel1):  # 柱子上的数字显示
    plt.text(a, b, '%.2f' % b, ha='center', va='bottom', fontsize=11);

for a, b in zip(index_2, Ylabel2):  # 柱子上的数字显示
    plt.text(a, b, '%.2f' % b, ha='center', va='bottom', fontsize=11);

for a, b in zip(index_3, Ylabel3):  # 柱子上的数字显示
    plt.text(a, b, '%.2f' % b, ha='center', va='bottom', fontsize=11);
# for a,b in zip(index+width,num_list1):
#  plt.text(a,b,'%.2f'%b,ha='center',va='bottom',fontsize=7);

plt.show()



